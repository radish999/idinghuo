{"version":3,"sources":["#style-inject:#style-inject","../src/styles/tailwind.css","../src/WalletButton/index.tsx","../src/utils.ts","../src/Card/index.tsx"],"sourcesContent":["\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\"@tailwind base;@tailwind components;@tailwind utilities;@layer components{.btn-primary{@apply px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors;}.btn-secondary{@apply px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors;}.input-primary{@apply px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent;}}\\n\")","// packages/ui/src/WalletButton/index.tsx\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { useWallet } from 'idinghuo-hooks';\nimport { cn } from '../utils';\n\ninterface WalletButtonProps {\n  className?: string;\n  connectText?: string;\n  disconnectText?: string;\n}\n\nexport const WalletButton: React.FC<WalletButtonProps> = ({\n  className,\n  connectText = '连接钱包',\n  disconnectText = '断开连接'\n}) => {\n  const { isConnected, address, connect, disconnect } = useWallet();\n\n  return (\n    <Button\n      onClick={isConnected ? disconnect : connect}\n      className={cn(\n        'px-4 py-2 rounded-lg font-medium',\n        isConnected ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600',\n        className\n      )}\n    >\n      {isConnected ? (\n        <>\n          {disconnectText}\n          {address && (\n            <span className=\"ml-2 text-sm opacity-80\">\n              ({address.slice(0, 6)}...{address.slice(-4)})\n            </span>\n          )}\n        </>\n      ) : (\n        connectText\n      )}\n    </Button>\n  );\n};","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","import React from 'react';\nimport { Card as MuiCard, CardContent, CardHeader } from '@mui/material';\nimport { cn } from '../utils';\n\ninterface CardProps {\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const Card: React.FC<CardProps> = ({\n  title,\n  children,\n  className\n}) => {\n  return (\n    <MuiCard className={cn('rounded-lg shadow', className)}>\n      {title && <CardHeader title={title} />}\n      <CardContent>{children}</CardContent>\n    </MuiCard>\n  );\n};"],"mappings":"AACyB,SAARA,EAA6BC,EAAK,CAAE,SAAAC,CAAS,EAAI,CAAC,EAAG,CAC1D,GAAI,CAACD,GAAO,OAAO,UAAa,YAAa,OAE7C,IAAME,EAAO,SAAS,MAAQ,SAAS,qBAAqB,MAAM,EAAE,CAAC,EAC/DC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,KAAO,WAETF,IAAa,OACXC,EAAK,WACPA,EAAK,aAAaC,EAAOD,EAAK,UAAU,EAK1CA,EAAK,YAAYC,CAAK,EAGpBA,EAAM,WACRA,EAAM,WAAW,QAAUH,EAE3BG,EAAM,YAAY,SAAS,eAAeH,CAAG,CAAC,CAElD,CCvB8BI,EAAY;AAAA,CAAoa,ECCxd,OAAOC,MAAW,QAClB,OAAS,UAAAC,MAAc,gBACvB,OAAS,aAAAC,MAAiB,iBCH1B,OAA0B,QAAAC,MAAY,OACtC,OAAS,WAAAC,MAAe,iBAEjB,SAASC,KAAMC,EAAsB,CAC1C,OAAOF,EAAQD,EAAKG,CAAM,CAAC,CAC7B,CDOO,IAAMC,EAA4C,CAAC,CACxD,UAAAC,EACA,YAAAC,EAAc,2BACd,eAAAC,EAAiB,0BACnB,IAAM,CACJ,GAAM,CAAE,YAAAC,EAAa,QAAAC,EAAS,QAAAC,EAAS,WAAAC,CAAW,EAAIC,EAAU,EAEhE,OACEC,EAAA,cAACC,EAAA,CACC,QAASN,EAAcG,EAAaD,EACpC,UAAWK,EACT,mCACAP,EAAc,8BAAgC,gCAC9CH,CACF,GAECG,EACCK,EAAA,cAAAA,EAAA,cACGN,EACAE,GACCI,EAAA,cAAC,QAAK,UAAU,2BAA0B,IACtCJ,EAAQ,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAQ,MAAM,EAAE,EAAE,GAC9C,CAEJ,EAEAH,CAEJ,CAEJ,EE1CA,OAAOU,MAAW,QAClB,OAAS,QAAQC,EAAS,eAAAC,EAAa,cAAAC,MAAkB,gBASlD,IAAMC,EAA4B,CAAC,CACxC,MAAAC,EACA,SAAAC,EACA,UAAAC,CACF,IAEIC,EAAA,cAACC,EAAA,CAAQ,UAAWC,EAAG,oBAAqBH,CAAS,GAClDF,GAASG,EAAA,cAACG,EAAA,CAAW,MAAON,EAAO,EACpCG,EAAA,cAACI,EAAA,KAAaN,CAAS,CACzB","names":["styleInject","css","insertAt","head","style","styleInject","React","Button","useWallet","clsx","twMerge","cn","inputs","WalletButton","className","connectText","disconnectText","isConnected","address","connect","disconnect","useWallet","React","Button","cn","React","MuiCard","CardContent","CardHeader","Card","title","children","className","React","MuiCard","cn","CardHeader","CardContent"]}